416. Partition Equal Subset Sum
Solved
Medium
Topics
Companies
Given an integer array nums, return true if you can partition the array into two subsets such that the sum of the elements in both subsets is equal or false otherwise.

 

Example 1:

Input: nums = [1,5,11,5]
Output: true
Explanation: The array can be partitioned as [1, 5, 5] and [11].
Example 2:

Input: nums = [1,2,3,5]
Output: false
Explanation: The array cannot be partitioned into equal sum subsets.
 

Constraints:

1 <= nums.length <= 200
1 <= nums[i] <= 100


solution///////
class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        n=len(nums)
        add=sum(nums)
        if add%2==1:
            return False 
        target=add//2

        dp=[]
        for i in range(n+1):
            dp.append([-1]*(target+1))

        def helper(nums,index,target,cur_sum):
            if index==len(nums):
                if cur_sum==target:
                    return True
                else:
                    return False 
            if dp[index][cur_sum] != -1:
                return dp[index][cur_sum]

            if cur_sum+nums[index]<=target:
                a=helper(nums,index+1,target,cur_sum+nums[index])
            else:
                a=False
            b=helper(nums,index+1,target,cur_sum+0)

            dp[index][cur_sum]=a or b
            return dp[index][cur_sum]


        return (helper(nums,0,target,0))

    
//////////not that dp created using nested array work but not dictionary!!!!!!!!!


        